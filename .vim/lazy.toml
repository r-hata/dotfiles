[[plugins]] # 入力補完
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']

[[plugins]] # スニペット
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]] # ファイル選択
repo = 'Shougo/denite.nvim'
depends = ['vimproc.vim']
hook_add = '''
  " バッファ一覧
  noremap <C-b> :Denite buffer<CR>
  " 最近使ったファイルの一覧
  " noremap <C-z> :Denite file_old<CR>
  " カレントディレクトリ
  noremap <C-c> :Denite file_rec<CR>
  " denite grep
  noremap <C-f> :Denite grep<CR>
'''
hook_post_source = '''
  " grepをptに変更
  if executable('pt')
    call denite#custom#var('grep', 'command', ['pt'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'default_opts', ['--follow', '--nogroup', '--nocolor'])
  endif
  " file_recのgrepではagを使用
  if executable('ag')
    call denite#custom#var('file_rec', 'command', ['ag', '-follow', '--nocolor', '--nogroup', '-t', '-g', ''])
  endif
'''

[[plugins]] # Python3文法チェック
repo = 'tell-k/vim-autopep8'
on_ft = 'python'
hook_source = '''
  function! Preserve(command)
    " Save the last search.
    let search = @/
    " Save the current cursor position.
    let cursor_position = getpos('.')
    " Save the current window position.
    normal! H
    let window_position = getpos('.')
    call setpos('.', cursor_position)
    " Execute the command.
    execute a:command
    " Restore the last search.
    let @/ = search
    " Restore the previous window position.
    call setpos('.', window_position)
    normal! zt
    " Restore the previous cursor position.
    call setpos('.', cursor_position)
  endfunction

  function! Autopep8()
    call Preserve(':silent %!autopep8 -')
  endfunction

  autocmd FileType python nnoremap <S-f> :call Autopep8()<CR>
'''
